import hashlib

def obtener_hashes(archivo, algoritmos):
    try:
        with open(archivo, 'rb') as file:
            data = file.read()
            hashes = {}

            for algoritmo in algoritmos:
                hash_obj = hashlib.new(algoritmo)
                hash_obj.update(data)
                hashes[algoritmo] = hash_obj.hexdigest()

            return hashes
    except FileNotFoundError:
        print(f"No se encontr√≥ el archivo: {archivo}")
        return None

def guardar_hashes(archivo, hashes):
    try:
        with open(archivo, 'w') as file:
            for algoritmo, hash_valor in hashes.items():
                file.write(f"{algoritmo}: {hash_valor}\n")

        print(f"Los hashes se han guardado en el archivo: {archivo}")
    except PermissionError:
        print(f"No se pudo guardar el archivo: {archivo}")

# Archivo que deseas obtener los hashes
archivo = './Laboratorio3/virtual2.py'

# Algoritmos de hash que deseas calcular
algoritmos = ['md5', 'sha1', 'sha256']

# Nombre del archivo de texto para guardar los hashes
archivo_hashes = 'hashes.txt'

# Obtener los hashes
hashes = obtener_hashes(archivo, algoritmos)

if hashes:
    # Guardar los hashes en un archivo de texto
    guardar_hashes(archivo_hashes, hashes)

